name: mpit-site

services:
  mpit-frontend:
    container_name: mpit-frontend
    build: ./mpit-frontend
    ports:
      - 8006:8080
    env_file: .env
    environment:
      MAIN_PATH: ${MAIN_PATH}
      YANDEX_MAPS_API_KEY: ${YANDEX_MAPS_API_KEY}
      FUSION_BRAIN_API_KEY: ${FUSION_BRAIN_API_KEY}
      FUSION_BRAIN_SECRET_KEY: ${FUSION_BRAIN_SECRET_KEY}
    restart: unless-stopped

  mpit-backend:
    container_name: mpit-backend
    restart: always
    build: ./mpit-backend
    env_file: .env
    healthcheck:
      test: curl -sSf http://localhost:8000/health & curl -sSf http://localhost:8000/health/db
      interval: 60s
      start_period: 1s
      timeout: 600s
    depends_on:
      mpit-database:
        condition: service_healthy
        restart: true
    ports:
      - 8005:8080
    environment:
      MAIN_PATH: ${MAIN_PATH}

      APP_NAME: ${APP_NAME}
      DEBUG: ${DEBUG}

      SECRET_KEY: ${SECRET_KEY}
      API_PREFIX: ${API_PREFIX}
      ADMIN_PATH: ${ADMIN_PATH}

      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASE_URL: ${DATABASE_URL}

      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_TOKEN_LIFETIME: ${JWT_TOKEN_LIFETIME}
      JWT_ALGORITHM: ${JWT_ALGORITHM}

      S3_ENDPOINT: ${S3_ENDPOINT}
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_KEY: ${S3_SECRET_KEY}
      S3_REGION: ${S3_REGION}
      S3_BUCKET: ${S3_BUCKET}

      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      TELEGRAM_WEBHOOK_URL: ${TELEGRAM_WEBHOOK_URL}
      TELEGRAM_WEBHOOK_API_KEY: ${TELEGRAM_WEBHOOK_API_KEY}
      
      HOST: ${HOST}
      PORT: ${PORT}

      STATIC_DIR: ${STATIC_DIR}
      TEMPLATES_DIR: ${TEMPLATES_DIR}

  mpit-bot:
    container_name: mpit-bot
    restart: always
    build: ./mpit-tg-bot
    env_file: .env
    environment:
      BOT_TOKEN: ${BOT_TOKEN}
      REGISTRATION_URL: ${REGISTRATION_URL}

  

  mpit-database:
    container_name: mpit-database
    restart: always
    image: postgres:latest
    env_file: .env
    volumes:
      # - ./dumps/dump.sql:/docker-entrypoint-initdb.d/dump.sql:ro
      - mpit-postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -d udom
      interval: 60s
      start_period: 1s
      timeout: 600s
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}


volumes:
  mpit-postgres-data:
    name: mpit-postgres-data
